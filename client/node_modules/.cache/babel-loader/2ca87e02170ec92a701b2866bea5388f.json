{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\ChatApp\\\\chat-app\\\\src\\\\components\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contacts() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState([]);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/getContacts\").then(res => {\n      setContacts(res.data);\n    });\n  }, []);\n\n  function handleSetChat(id) {\n    axios.get(`http://localhost:3001/getUsers/${id}`).then(res => {\n      setCurrentChat(res.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: [\"Click a user to chat\", contacts.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users\",\n        onClick: () => handleSetChat(item.id),\n        children: [item.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentChat.length == 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), currentChat.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usersChat\",\n        children: [item.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 42\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contacts, \"IaH8S0XzXY8brjk7r8erTHrNoJg=\");\n\n_c = Contacts;\nconst Container = styled.div`\ndisplay:flex;\n.items {\n  width:50%;\n  height:50%;\n  .users {\n    border:1px solid #dfdfdf;\n    font-size:20px;\n    padding:20px;\n    margin:10px;\n    cursor:pointer;\n    \n  }\n}\n.usersChat{\n  font-size:50px;\n}\n`;\n_c2 = Container;\nexport default Contacts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/ChatApp/chat-app/src/components/Contacts.js"],"names":["React","axios","useEffect","useState","styled","Contacts","contacts","setContacts","currentChat","setCurrentChat","message","setMessage","get","then","res","data","handleSetChat","id","map","item","key","username","length","e","target","value","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAElB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACW,GAAN,CAAU,mCAAV,EAA+CC,IAA/C,CAAqDC,GAAD,IAAS;AAC3DP,MAAAA,WAAW,CAACO,GAAG,CAACC,IAAL,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACzBhB,IAAAA,KAAK,CAACW,GAAN,CAAW,kCAAiCK,EAAG,EAA/C,EAAkDJ,IAAlD,CAAwDC,GAAD,IAAS;AAC9DL,MAAAA,cAAc,CAACK,GAAG,CAACC,IAAL,CAAd;AACD,KAFD;AAGD;;AACD,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,yCAEGT,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,kBAAgB;AAAK,QAAA,SAAS,EAAC,OAAf;AAAqC,QAAA,OAAO,EAAE,MAAMJ,aAAa,CAACG,IAAI,CAACF,EAAN,CAAjE;AAAA,mBAC3BE,IAAI,CAACE,QADsB,eAE5B;AAAA;AAAA;AAAA;AAAA,gBAF4B;AAAA,SAA4BF,IAAI,CAACF,EAAjC;AAAA;AAAA;AAAA;AAAA,cAA7B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBACGT,WAAW,CAACc,MAAZ,IAAqB,CAArB,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzB,GAAiD;AADpD;AAAA;AAAA;AAAA;AAAA,cADF,EAIGd,WAAW,CAACU,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,kBAAgB;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAC9BD,IAAI,CAACE,QADyB,eAE/B;AAAA;AAAA;AAAA;AAAA,gBAF+B;AAAA,SAAgCF,IAAI,CAACF,EAArC;AAAA;AAAA;AAAA;AAAA,cAAhC,CAJH,eAQE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,cAA7B;AAA4C,UAAA,QAAQ,EAAGM,CAAD,IAAOZ,UAAU,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAAvE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAxCQpB,Q;;KAAAA,Q;AAyCT,MAAMqB,SAAS,GAAGtB,MAAM,CAACuB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;MAAMD,S;AAmBN,eAAerB,QAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Contacts() {\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [message,setMessage]= useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/getContacts\").then((res) => {\r\n      setContacts(res.data);\r\n    })\r\n  }, [])\r\n\r\n  function handleSetChat(id) {\r\n    axios.get(`http://localhost:3001/getUsers/${id}`).then((res) => {\r\n      setCurrentChat(res.data);\r\n    })\r\n  }\r\n  return (\r\n    <Container>\r\n      <div className='items'>\r\n        Click a user to chat\r\n        {contacts.map((item, key) => (<div className='users' key={item.id} onClick={() => handleSetChat(item.id)}>\r\n          {item.username}\r\n          <br />\r\n        </div>))}\r\n      </div>\r\n      <div className=\"chat\">\r\n        <h3>\r\n          {currentChat.length ==1 ? <span>The chat</span> : null }\r\n        </h3>\r\n        {currentChat.map((item, key) => (<div className='usersChat' key={item.id}>\r\n          {item.username}\r\n          <br />\r\n        </div>))}\r\n        <div className='input-group'>\r\n          <input type=\"text\" className='form-control' onChange={(e) => setMessage(e.target.value)}/>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\ndisplay:flex;\r\n.items {\r\n  width:50%;\r\n  height:50%;\r\n  .users {\r\n    border:1px solid #dfdfdf;\r\n    font-size:20px;\r\n    padding:20px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n    \r\n  }\r\n}\r\n.usersChat{\r\n  font-size:50px;\r\n}\r\n`;\r\n\r\nexport default Contacts"]},"metadata":{},"sourceType":"module"}