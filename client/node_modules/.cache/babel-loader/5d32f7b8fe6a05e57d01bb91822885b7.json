{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\ChatApp\\\\chat-app\\\\src\\\\components\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contacts() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [msgs, setMsgs] = useState([]);\n  const msg = useRef();\n  const socket = useRef();\n  var currentUser = JSON.parse(sessionStorage.getItem(\"loggedin\"));\n  useEffect(() => {\n    axios.get(`http://localhost:3001/getContacts/${currentUser.id}`).then(res => {\n      setContacts(res.data);\n    });\n  }, []); // useEffect(() => {\n  // }, [currentChat]);\n\n  useEffect(() => {\n    if (currentChat.length > 0) {\n      async function ChatMsg() {\n        const response = await axios.post(\"http://localhost:3001/receiveMessages\", {\n          from: currentUser.id,\n          to: currentChat[0].id\n        });\n        setMsgs(response.data);\n        const host = \"http://localhost:3001\";\n        socket.current = io(host);\n        socket.current.emit(\"add-user\", currentUser.id);\n      }\n\n      ChatMsg();\n    }\n  }, [currentChat]);\n\n  const sendMsg = id => {\n    const user = currentUser.id;\n    axios.post(\"http://localhost:3001/sendMsg\", {\n      message,\n      id,\n      user\n    }).then(res => {\n      console.log(res.data);\n      socket.current.emit(\"send-msg\", {\n        to: currentChat.id,\n        from: user,\n        msg: message\n      });\n      const msgsSet = [...msgs];\n      msgsSet.push({\n        fromSelf: true,\n        message: msg\n      });\n      setMsgs(msgsSet);\n      msg.current.value = null;\n    });\n  };\n\n  function handleSetChat(id) {\n    axios.get(`http://localhost:3001/getUsers/${id}`).then(res => {\n      setCurrentChat(res.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: [\"Click a user to chat\", contacts.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users\",\n        onClick: () => handleSetChat(item.id),\n        children: [item.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentChat.length == 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 38\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), currentChat.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", item.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMessages\",\n          children: msgs.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat ${item.fromSelf ? \"sended\" : \"recieved\"}`,\n            children: item.message\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              ref: msg,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm w-100\",\n              onClick: () => sendMsg(item.id),\n              children: \"Send Msg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contacts, \"2HSPMbP50gG43H0yg1XB45D9ft4=\");\n\n_c = Contacts;\nconst Container = styled.div`\ndisplay:flex;\n.items {\n  width:50%;\n  height:50%;\n  .users {\n    border:1px solid #dfdfdf;\n    font-size:20px;\n    padding:20px;\n    margin:10px;\n    cursor:pointer;  \n  }\n}\n.chat {\n  width:80%;\n}\n.usersChat{\n  font-size:50px;\n}\n.chatMessages {\n\n  padding: 1rem 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  overflow: auto;\n.sended {\n  justify-content: flex-end;\n  text-align:end;\n}\n.recieved {\n  justify-content: flex-start;\n\n  }\n}\n`;\n_c2 = Container;\nexport default Contacts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/ChatApp/chat-app/src/components/Contacts.js"],"names":["React","axios","useEffect","useState","useRef","styled","v4","uuidv4","io","Contacts","contacts","setContacts","currentChat","setCurrentChat","message","setMessage","msgs","setMsgs","msg","socket","currentUser","JSON","parse","sessionStorage","getItem","get","id","then","res","data","length","ChatMsg","response","post","from","to","host","current","emit","sendMsg","user","console","log","msgsSet","push","fromSelf","value","handleSetChat","map","item","key","username","e","target","Container","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nfunction Contacts() {\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const [msgs, setMsgs] = useState([]);\r\n  const msg = useRef();\r\n  const socket = useRef();\r\n  var currentUser = JSON.parse(sessionStorage.getItem(\"loggedin\"));\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/getContacts/${currentUser.id}`).then((res) => {\r\n      setContacts(res.data);\r\n    })\r\n  }, [])\r\n  // useEffect(() => {\r\n\r\n  // }, [currentChat]);\r\n  useEffect(() => {\r\n    if (currentChat.length > 0) {\r\n      async function ChatMsg() {\r\n        const response = await axios.post(\"http://localhost:3001/receiveMessages\", {\r\n          from: currentUser.id,\r\n          to: currentChat[0].id\r\n        });\r\n\r\n        setMsgs(response.data);\r\n        const host = \"http://localhost:3001\";\r\n        socket.current = io(host);\r\n        socket.current.emit(\"add-user\", currentUser.id);\r\n      }\r\n      ChatMsg();\r\n    }\r\n\r\n  }, [currentChat]);\r\n\r\n\r\n  const sendMsg = (id) => {\r\n    const user = currentUser.id;\r\n    axios.post(\"http://localhost:3001/sendMsg\", { message, id, user }).then((res) => {\r\n      console.log(res.data)\r\n      socket.current.emit(\"send-msg\", {\r\n        to: currentChat.id,\r\n        from: user,\r\n        msg : message,\r\n      });\r\n      const msgsSet = [...msgs];\r\n      msgsSet.push({ fromSelf: true, message: msg });\r\n      \r\n      setMsgs(msgsSet);\r\n      msg.current.value = null;\r\n    })\r\n  }\r\n\r\n  function handleSetChat(id) {\r\n    axios.get(`http://localhost:3001/getUsers/${id}`).then((res) => {\r\n      setCurrentChat(res.data);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className='items'>\r\n        Click a user to chat\r\n        {contacts.map((item, key) => (<div className='users' key={item.id} onClick={() => handleSetChat(item.id)}>\r\n          {item.username}\r\n          <br />\r\n        </div>))}\r\n      </div>\r\n      <div className=\"chat\">\r\n        <h3>\r\n          {currentChat.length == 1 ? <span>The chat</span> : null}\r\n        </h3>\r\n        {currentChat.map((item, key) => (<div className='' key={item.id}>\r\n          <h3 > {item.username}</h3>\r\n          <br />\r\n          <div className=\"chatMessages\">\r\n            {msgs.map((item) => (<div key={uuidv4()} className={`chat ${item.fromSelf ? \"sended\" : \"recieved\"\r\n              }`}>\r\n              {item.message}\r\n            </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <input type=\"text\" className='form-control' ref={msg} onChange={(e) => setMessage(e.target.value)} />\r\n              <button className='btn btn-primary btn-sm w-100' onClick={() => sendMsg(item.id)}>Send Msg</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n    </Container >\r\n  )\r\n}\r\nconst Container = styled.div`\r\ndisplay:flex;\r\n.items {\r\n  width:50%;\r\n  height:50%;\r\n  .users {\r\n    border:1px solid #dfdfdf;\r\n    font-size:20px;\r\n    padding:20px;\r\n    margin:10px;\r\n    cursor:pointer;  \r\n  }\r\n}\r\n.chat {\r\n  width:80%;\r\n}\r\n.usersChat{\r\n  font-size:50px;\r\n}\r\n.chatMessages {\r\n\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  overflow: auto;\r\n.sended {\r\n  justify-content: flex-end;\r\n  text-align:end;\r\n}\r\n.recieved {\r\n  justify-content: flex-start;\r\n\r\n  }\r\n}\r\n`;\r\nexport default Contacts"]},"metadata":{},"sourceType":"module"}