{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\ChatApp\\\\chat-app\\\\src\\\\components\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contacts() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [msgs, setMsgs] = useState(undefined);\n  const msg = useRef();\n  var currentUser = JSON.parse(sessionStorage.getItem(\"loggedin\"));\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/getContacts\").then(res => {\n      setContacts(res.data);\n    });\n  }, []);\n  useEffect(async () => {\n    if (currentChat.length > 0) {\n      const response = axios.post(\"http://localhost:3001/receiveMessages\", {\n        from: currentUser.id,\n        to: currentChat.id\n      });\n      console.log(data);\n      setMsgs(response.data);\n    }\n  }, [currentChat]);\n\n  const sendMsg = id => {\n    const user = currentUser.id;\n    axios.post(\"http://localhost:3001/sendMsg\", {\n      message,\n      id,\n      user\n    }).then(res => {\n      console.log(res.data);\n      msg.current.value = null;\n    });\n  };\n\n  function handleSetChat(id) {\n    axios.get(`http://localhost:3001/getUsers/${id}`).then(res => {\n      setCurrentChat(res.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: [\"Click a user to chat\", contacts.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users\",\n        onClick: () => handleSetChat(item.id),\n        children: [item.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentChat.length == 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 38\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), currentChat.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usersChat\",\n        children: [item.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              ref: msg,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm w-100\",\n              onClick: () => sendMsg(item.id),\n              children: \"Send Msg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contacts, \"KLXv0DjbZpQvAguZzJ0esaCPRsc=\");\n\n_c = Contacts;\nconst Container = styled.div`\ndisplay:flex;\n.items {\n  width:50%;\n  height:50%;\n  .users {\n    border:1px solid #dfdfdf;\n    font-size:20px;\n    padding:20px;\n    margin:10px;\n    cursor:pointer;\n    \n  }\n}\n.usersChat{\n  font-size:50px;\n}\n`;\n_c2 = Container;\nexport default Contacts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/ChatApp/chat-app/src/components/Contacts.js"],"names":["React","axios","useEffect","useState","useRef","styled","Contacts","contacts","setContacts","currentChat","setCurrentChat","message","setMessage","msgs","setMsgs","undefined","msg","currentUser","JSON","parse","sessionStorage","getItem","get","then","res","data","length","response","post","from","id","to","console","log","sendMsg","user","current","value","handleSetChat","map","item","key","username","e","target","Container","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Contacts() {\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const [msgs, setMsgs] = useState(undefined);\r\n  const msg = useRef();\r\n  var currentUser = JSON.parse(sessionStorage.getItem(\"loggedin\"));\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/getContacts\").then((res) => {\r\n      setContacts(res.data);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    if (currentChat.length > 0) {\r\n      const response = axios.post(\"http://localhost:3001/receiveMessages\", {\r\n        from: currentUser.id,\r\n        to: currentChat.id\r\n      })\r\n      console.log(data)\r\n      setMsgs(response.data);\r\n    }\r\n  }, [currentChat])\r\n  const sendMsg = (id) => {\r\n    const user = currentUser.id;\r\n    axios.post(\"http://localhost:3001/sendMsg\", { message, id, user }).then((res) => {\r\n      console.log(res.data)\r\n      msg.current.value = null;\r\n    })\r\n  }\r\n\r\n  function handleSetChat(id) {\r\n    axios.get(`http://localhost:3001/getUsers/${id}`).then((res) => {\r\n      setCurrentChat(res.data);\r\n    })\r\n  }\r\n  return (\r\n    <Container>\r\n      <div className='items'>\r\n        Click a user to chat\r\n        {contacts.map((item, key) => (<div className='users' key={item.id} onClick={() => handleSetChat(item.id)}>\r\n          {item.username}\r\n          <br />\r\n        </div>))}\r\n      </div>\r\n      <div className=\"chat\">\r\n        <h3>\r\n          {currentChat.length == 1 ? <span>The chat</span> : null}\r\n        </h3>\r\n        {currentChat.map((item, key) => (<div className='usersChat' key={item.id}>\r\n          {item.username}\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <input type=\"text\" className='form-control' ref={msg} onChange={(e) => setMessage(e.target.value)} />\r\n              <button className='btn btn-primary btn-sm w-100' onClick={() => sendMsg(item.id)}>Send Msg</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\ndisplay:flex;\r\n.items {\r\n  width:50%;\r\n  height:50%;\r\n  .users {\r\n    border:1px solid #dfdfdf;\r\n    font-size:20px;\r\n    padding:20px;\r\n    margin:10px;\r\n    cursor:pointer;\r\n    \r\n  }\r\n}\r\n.usersChat{\r\n  font-size:50px;\r\n}\r\n`;\r\n\r\nexport default Contacts"]},"metadata":{},"sourceType":"module"}