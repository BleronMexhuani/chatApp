{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Desktop\\\\ChatApp\\\\chat-app\\\\src\\\\components\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useEffect, useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Contacts() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [msgs, setMsgs] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState();\n  const msg = useRef();\n  const socket = useRef();\n  const host = \"http://localhost:3001\";\n  var currentUser = JSON.parse(sessionStorage.getItem(\"loggedin\"));\n  useEffect(() => {\n    axios.get(`http://localhost:3001/getContacts/${currentUser.id}`).then(res => {\n      setContacts(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    if (currentChat.length > 0) {\n      async function ChatMsg() {\n        const response = await axios.post(\"http://localhost:3001/receiveMessages\", {\n          from: currentUser.id,\n          to: currentChat[0].id\n        });\n        setMsgs(response.data);\n        socket.current = io(host);\n        socket.current.emit(\"add-user\", currentUser.id);\n      }\n\n      ChatMsg();\n    }\n  }, [currentChat]);\n\n  const sendMsg = id => {\n    const user = currentUser.id;\n    axios.post(\"http://localhost:3001/sendMsg\", {\n      message,\n      id,\n      user\n    }).then(res => {\n      socket.current.emit(\"send-msg\", {\n        to: id,\n        from: currentUser.id,\n        message: message\n      });\n      const msgsSet = [...msgs];\n      msgsSet.push({\n        fromSelf: true,\n        message: message\n      });\n      setMsgs(msgsSet);\n      msg.current.value = null;\n    });\n  };\n\n  function handleSetChat(id) {\n    axios.get(`http://localhost:3001/getUsers/${id}`).then(res => {\n      setCurrentChat(res.data);\n    });\n  }\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", message => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: message\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMsgs(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: [\"Click a user to chat\", contacts.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users\",\n        onClick: () => handleSetChat(item.id),\n        children: [item.username, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentChat.length == 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"The chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 38\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), currentChat.map((item, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", item.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMessages\",\n          children: msgs.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat ${item.fromSelf ? \"sended\" : \"recieved\"}`,\n            children: item.message\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              ref: msg,\n              onChange: e => setMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-sm w-100\",\n              onClick: () => sendMsg(item.id),\n              children: \"Send Msg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contacts, \"bzO+tNL/rpKsYoVW7WUsCjvT+HE=\");\n\n_c = Contacts;\nconst Container = styled.div`\ndisplay:flex;\n.items {\n  width:50%;\n  height:50%;\n  .users {\n    border:1px solid #dfdfdf;\n    font-size:20px;\n    padding:20px;\n    margin:10px;\n    cursor:pointer;  \n  }\n}\n.chat {\n  width:80%;\n}\n.usersChat{\n  font-size:50px;\n}\n.chatMessages {\n\n  padding: 1rem 2rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  overflow: auto;\n.sended {\n  justify-content: flex-end;\n  text-align:end;\n}\n.recieved {\n  justify-content: flex-start;\n\n  }\n}\n`;\n_c2 = Container;\nexport default Contacts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/MSI/Desktop/ChatApp/chat-app/src/components/Contacts.js"],"names":["React","axios","useEffect","useState","useRef","styled","v4","uuidv4","io","Contacts","contacts","setContacts","currentChat","setCurrentChat","message","setMessage","msgs","setMsgs","arrivalMessage","setArrivalMessage","msg","socket","host","currentUser","JSON","parse","sessionStorage","getItem","get","id","then","res","data","length","ChatMsg","response","post","from","to","current","emit","sendMsg","user","msgsSet","push","fromSelf","value","handleSetChat","on","prev","map","item","key","username","e","target","Container","div"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nfunction Contacts() {\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const [msgs, setMsgs] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState();\r\n  const msg = useRef();\r\n  const socket = useRef();\r\n  const host = \"http://localhost:3001\";\r\n\r\n  var currentUser = JSON.parse(sessionStorage.getItem(\"loggedin\"));\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/getContacts/${currentUser.id}`).then((res) => {\r\n      setContacts(res.data);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (currentChat.length > 0) {\r\n      async function ChatMsg() {\r\n        const response = await axios.post(\"http://localhost:3001/receiveMessages\", {\r\n          from: currentUser.id,\r\n          to: currentChat[0].id\r\n        });\r\n        setMsgs(response.data);\r\n\r\n        socket.current = io(host);\r\n        socket.current.emit(\"add-user\", currentUser.id);\r\n      }\r\n      ChatMsg();\r\n    }\r\n\r\n  }, [currentChat]);\r\n\r\n\r\n  const sendMsg = (id) => {\r\n    const user = currentUser.id;\r\n    axios.post(\"http://localhost:3001/sendMsg\", { message, id, user }).then((res) => {\r\n\r\n      socket.current.emit(\"send-msg\", {\r\n        to: id,\r\n        from: currentUser.id,\r\n        message: message\r\n      });\r\n      const msgsSet = [...msgs];\r\n\r\n      msgsSet.push({ fromSelf: true, message: message });\r\n\r\n      setMsgs(msgsSet);\r\n      msg.current.value = null;\r\n    })\r\n  }\r\n\r\n\r\n\r\n  function handleSetChat(id) {\r\n    axios.get(`http://localhost:3001/getUsers/${id}`).then((res) => {\r\n      setCurrentChat(res.data);\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"msg-recieve\", (message) => {\r\n      \r\n        setArrivalMessage({ fromSelf: false, message: message });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage && setMsgs((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage]);\r\n  return (\r\n    <Container>\r\n      <div className='items'>\r\n        Click a user to chat\r\n        {contacts.map((item, key) => (<div className='users' key={item.id} onClick={() => handleSetChat(item.id)}>\r\n          {item.username}\r\n          <br />\r\n        </div>))}\r\n      </div>\r\n      <div className=\"chat\">\r\n        <h3>\r\n          {currentChat.length == 1 ? <span>The chat</span> : null}\r\n        </h3>\r\n        {currentChat.map((item, key) => (<div className='' key={item.id}>\r\n          <h3 > {item.username}</h3>\r\n          <br />\r\n          <div className=\"chatMessages\">\r\n            {msgs.map((item) => (<div key={uuidv4()} className={`chat ${item.fromSelf ? \"sended\" : \"recieved\"\r\n              }`}>\r\n              {item.message}\r\n            </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <input type=\"text\" className='form-control' ref={msg} onChange={(e) => setMessage(e.target.value)} />\r\n              <button className='btn btn-primary btn-sm w-100' onClick={() => sendMsg(item.id)}>Send Msg</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        ))}\r\n\r\n\r\n      </div>\r\n    </Container >\r\n  )\r\n}\r\nconst Container = styled.div`\r\ndisplay:flex;\r\n.items {\r\n  width:50%;\r\n  height:50%;\r\n  .users {\r\n    border:1px solid #dfdfdf;\r\n    font-size:20px;\r\n    padding:20px;\r\n    margin:10px;\r\n    cursor:pointer;  \r\n  }\r\n}\r\n.chat {\r\n  width:80%;\r\n}\r\n.usersChat{\r\n  font-size:50px;\r\n}\r\n.chatMessages {\r\n\r\n  padding: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  overflow: auto;\r\n.sended {\r\n  justify-content: flex-end;\r\n  text-align:end;\r\n}\r\n.recieved {\r\n  justify-content: flex-start;\r\n\r\n  }\r\n}\r\n`;\r\nexport default Contacts"]},"metadata":{},"sourceType":"module"}